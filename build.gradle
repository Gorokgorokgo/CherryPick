plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.cherrypick'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web 애플리케이션 기본 기능
    implementation 'org.springframework.boot:spring-boot-starter-web' // Spring MVC, 내장 Tomcat 등

    // JPA 기반 ORM (Hibernate 포함)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA + Hibernate

    // 요청 검증 (JSR-380 Bean Validation)
    implementation 'org.springframework.boot:spring-boot-starter-validation' // @Valid, @NotNull 등

    // 보안 (로그인 인증/인가 처리)
    implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security

    // 실시간 통신 (입찰 알림 등 WebSocket)
    implementation 'org.springframework.boot:spring-boot-starter-websocket' // STOMP, SockJS 등

    // Actuator (헬스체크, 메트릭스, 모니터링)
    implementation 'org.springframework.boot:spring-boot-starter-actuator' // Health check, metrics

    // Redis 연동 (세션, 캐시, Pub/Sub 등)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // RedisTemplate 기반
    implementation 'redis.clients:jedis' // Redis 클라이언트 (Jedis 사용 시 필요)

    // JWT 기반 인증 토큰 처리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT API
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5' // 내부 구현
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Jackson으로 JWT serialize/deserialize

    // AWS SDK for S3
    implementation 'software.amazon.awssdk:s3:2.21.29' // AWS S3 SDK
    implementation 'software.amazon.awssdk:auth:2.21.29' // AWS Authentication

    // Swagger + OpenAPI 3 문서 자동 생성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' // Spring Boot 3.x 호환

    // .env 환경변수 자동 로드 (더 안정적인 라이브러리)
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Standard JVM 설정
tasks.named('bootRun') {
    systemProperty 'spring.profiles.active', 'dev'
}