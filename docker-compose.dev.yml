services:
  # PostgreSQL 로컬 개발용
  postgres-dev:
    image: postgres:15-alpine
    container_name: cherrypick-postgres-dev
    environment:
      POSTGRES_DB: cherrypick
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cherrypick-dev-network

  # Redis 로컬 개발용
  redis-dev:
    image: redis:7-alpine
    container_name: cherrypick-redis-dev
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cherrypick-dev-network

  # pgAdmin (선택사항 - DB 관리 툴)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cherrypick-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cherrypick.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8082:80"  # pgAdmin을 8082 포트로 변경, 내부적으로 80로 실행
    depends_on:
      postgres-dev:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cherrypick-dev-network

  # React Native Metro 번들러
  metro-dev:
    image: node:20-alpine
    container_name: cherrypick-metro-dev
    working_dir: /app
    volumes:
      - ./CherryPickMobile:/app
      - metro_node_modules:/app/node_modules
    ports:
      - "8081:8081"  # Metro를 8081 포트로 변경
    environment:
      - NODE_ENV=development
    command: >
      sh -c "
        echo 'Checking dependencies...' &&
        if [ ! -d node_modules ] || [ ! -f node_modules/.package-lock.json ]; then
          echo 'Installing dependencies...' &&
          npm ci --silent
        fi &&
        echo 'Starting Metro bundler...' &&
        ./node_modules/.bin/react-native start --host 0.0.0.0 --port 8081
      "
    restart: unless-stopped
    networks:
      - cherrypick-dev-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  metro_node_modules:
    driver: local

networks:
  cherrypick-dev-network:
    driver: bridge