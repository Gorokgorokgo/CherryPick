version: '3.8'

services:
  # PostgreSQL 로컬 개발용
  postgres-dev:
    image: postgres:15-alpine
    container_name: cherrypick-postgres-dev
    environment:
      POSTGRES_DB: cherrypick
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cherrypick-dev-network

  # Redis 로컬 개발용
  redis-dev:
    image: redis:7-alpine
    container_name: cherrypick-redis-dev
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cherrypick-dev-network

  # pgAdmin (선택사항 - DB 관리 툴)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cherrypick-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cherrypick.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8082:80"
    depends_on:
      postgres-dev:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cherrypick-dev-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  cherrypick-dev-network:
    driver: bridge