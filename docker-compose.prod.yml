version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cherrypick-redis-prod
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-}"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - cherrypick-network

  # Spring Boot Application
  app:
    image: ${NCP_CONTAINER_REGISTRY}/cherrypick-app:latest
    container_name: cherrypick-app-prod
    ports:
      - "8080:8080"
    environment:
      # Database Configuration (NCP Cloud DB for PostgreSQL)
      - DB_HOST=${NCP_DB_HOST}
      - DB_PORT=${NCP_DB_PORT:-5432}
      - DB_NAME=${NCP_DB_NAME:-cherrypick}
      - DB_USERNAME=${NCP_DB_USERNAME}
      - DB_PASSWORD=${NCP_DB_PASSWORD}
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      
      # JWT Configuration  
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      
      # NCP Object Storage Configuration
      - NCP_OBJECT_STORAGE_ENDPOINT=${NCP_OBJECT_STORAGE_ENDPOINT:-https://kr.object.ncloudstorage.com}
      - NCP_OBJECT_STORAGE_BUCKET=${NCP_OBJECT_STORAGE_BUCKET}
      - NCP_REGION=${NCP_REGION:-kr-standard}
      - NCP_ACCESS_KEY_ID=${NCP_ACCESS_KEY_ID}
      - NCP_SECRET_ACCESS_KEY=${NCP_SECRET_ACCESS_KEY}
      
      # NCP Container Registry Configuration
      - NCP_CONTAINER_REGISTRY=${NCP_CONTAINER_REGISTRY}
      
      # Spring Profile
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - cherrypick-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cherrypick-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # SSL certificates (mount only if ssl directory exists)
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - cherrypick-network

volumes:
  redis_data:
    driver: local

networks:
  cherrypick-network:
    driver: bridge